{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asraf\\\\Desktop\\\\Development\\\\ReactJS\\\\SpotifyDashboard\\\\client\\\\src\\\\container\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport Login from '../components/Login';\nimport { loggedIn, setTokens } from '../utils/localstorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const location = useLocation();\n  const params = new URLSearchParams(location.hash.replace('#', ''));\n  const accessToken = params.get(\"accessToken\");\n  const refreshToken = params.get(\"refreshToken\");\n  const expiresIn = params.get(\"expiresIn\");\n\n  if (accessToken != null && refreshToken != null && expiresIn != null) {\n    setTokens(accessToken, refreshToken, expiresIn);\n  }\n\n  if (loggedIn()) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: accessToken\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }, this);else return /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 18\n  }, this);\n};\n\n_s(Home, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/asraf/Desktop/Development/ReactJS/SpotifyDashboard/client/src/container/Home.jsx"],"names":["React","useLocation","Login","loggedIn","setTokens","Home","location","params","URLSearchParams","hash","replace","accessToken","get","refreshToken","expiresIn"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,uBAApC;;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,MAAM,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsB,GAAtB,EAA2B,EAA3B,CAApB,CAAf;AACA,QAAMC,WAAW,GAAGJ,MAAM,CAACK,GAAP,CAAW,aAAX,CAApB;AACA,QAAMC,YAAY,GAAGN,MAAM,CAACK,GAAP,CAAW,cAAX,CAArB;AACA,QAAME,SAAS,GAAGP,MAAM,CAACK,GAAP,CAAW,WAAX,CAAlB;;AAEA,MAAID,WAAW,IAAI,IAAf,IAAuBE,YAAY,IAAI,IAAvC,IAA+CC,SAAS,IAAI,IAAhE,EAAsE;AAClEV,IAAAA,SAAS,CAACO,WAAD,EAAcE,YAAd,EAA4BC,SAA5B,CAAT;AACH;;AAED,MAAIX,QAAQ,EAAZ,EACI,oBACI;AAAA,cACKQ;AADL;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ,KAMK,oBAAQ,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UAAR;AACR,CAlBD;;GAAMN,I;UACeJ,W;;;KADfI,I;AAoBN,eAAeA,IAAf","sourcesContent":["import React from 'react'\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Login from '../components/Login';\r\n\r\nimport { loggedIn, setTokens } from '../utils/localstorage';\r\nconst Home = () => {\r\n    const location = useLocation();\r\n    const params = new URLSearchParams(location.hash.replace('#', ''));\r\n    const accessToken = params.get(\"accessToken\")\r\n    const refreshToken = params.get(\"refreshToken\")\r\n    const expiresIn = params.get(\"expiresIn\")\r\n\r\n    if (accessToken != null && refreshToken != null && expiresIn != null) {\r\n        setTokens(accessToken, refreshToken, expiresIn)\r\n    }\r\n\r\n    if (loggedIn())\r\n        return (\r\n            <div>\r\n                {accessToken}\r\n            </div>\r\n        )\r\n    else return (<Login />)\r\n}\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}